"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const env_1 = require("../bindings/env");
const base_1 = require("./base");
const encoder = new TextEncoder();
const decoder = new TextDecoder();
class DB extends base_1.default {
    select(name, variables) {
        return this.exec(env_1.QueryType.Select, name, variables || {});
    }
    insert(name, variables) {
        return this.exec(env_1.QueryType.Insert, name, variables || {});
    }
    update(name, variables) {
        // The host call is guaranteed to return `rowsAffected`
        // @ts-ignore
        return this.exec(env_1.QueryType.Update, name, variables || {});
    }
    delete(name, variables) {
        // The host call is guaranteed to return `rowsAffected`
        // @ts-ignore
        return this.exec(env_1.QueryType.Delete, name, variables || {});
    }
    exec(queryType, name, variables) {
        Object.entries(variables).forEach(([name, value]) => {
            this.env.addFfiVar(name, value, this.ident);
        });
        const resultSize = this.env.dbExec(queryType, name, this.ident);
        const result = decoder.decode(this.ffiResult(resultSize));
        if (result) {
            return JSON.parse(result);
        }
        else {
            return {};
        }
    }
}
exports.default = DB;
